rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is accessing their own data
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Helper function to check if user is accessing a friend's data
    function isFriend(userId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)/friends/$(userId));
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
      
      // Friends subcollection
      match /friends/{friendId} {
        allow read, write: if isOwner(userId);
      }
    }

    // Climbs collection
    match /climbs/{climbId} {
      allow read: if isAuthenticated() && (
        isOwner(resource.data.userId) || 
        isFriend(resource.data.userId)
      );
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      allow update, delete: if isAuthenticated() && isOwner(resource.data.userId);
    }
  }
}